<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel del Alumno</title>
    <!-- Enlace a Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <!-- Enlace a Font Awesome para iconos -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <!-- Estilos personalizados -->
    <style>
        body {
            background-color: #f5f8fb;
            font-family: Arial, sans-serif;
        }
        .navbar {
            background-color: #003366;
        }
        .navbar-brand, .navbar-nav .nav-link, .navbar-text {
            color: #ffffff !important;
        }
        .container-title {
            margin-top: 20px;
            text-align: center;
            color: #003366;
        }
        .profile-status {
            background-color: #d9edf7;
            color: #31708f;
            border: 1px solid #bce8f1;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .card {
            margin-bottom: 20px;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>

    <!-- Barra de Navegación -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Logo</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-home"></i> Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-bullhorn"></i> Anuncios</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-building"></i> Empresas</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-user"></i> Mi Perfil</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-envelope"></i> Contacto</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-bell"></i> Notificaciones</a>
                    </li>
                </ul>
                <span class="navbar-text">
                    <img src="ruta_del_avatar" alt="Avatar" class="rounded-circle" width="30" height="30"> Juan Pérez
                </span>
                <button class="btn btn-outline-light ms-3" @click="logout">Cerrar sesión</button>
            </div>
        </div>
    </nav>

    <!-- Contenedor Principal -->
    <div class="container mt-4" id="app">
        <!-- Título -->
        <div class="container-title">
            <h2>Panel del Alumno - Inicio</h2>
        </div>

        <!-- Estado del Perfil -->
        <div class="profile-status" v-if="perfilCompleto">
            <i class="fas fa-check-circle"></i> Perfil completo, ¡todo listo para postularte a las ofertas!
        </div>
        <div class="profile-status" v-else>
            <i class="fas fa-exclamation-triangle"></i> Completa tu perfil: sube tu CV, agrega LinkedIn y GitHub.
        </div>

        <!-- Últimos Anuncios -->
        <h3>Últimos Anuncios</h3>
        <div class="row">
            <div class="col-md-6 col-lg-4" v-for="anuncio in anuncios.slice(0, 5)" :key="anuncio.id">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">{{ anuncio.titulo }}</h5>
                        <p class="card-text">{{ anuncio.descripcion }}</p>
                        <button class="btn btn-primary" @click="verAnuncio(anuncio.id)">Ver más</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Anuncios a los que Aplicaste -->
        <h3 class="mt-4">Anuncios a los que Aplicaste</h3>
        <ul class="list-group">
            <li class="list-group-item" v-for="aplicacion in aplicaciones" :key="aplicacion.id">
                <strong>{{ aplicacion.titulo }}</strong> - {{ aplicacion.estado }}
            </li>
        </ul>
    </div>

    <!-- Scripts de Bootstrap y Vue.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js"></script>

    <script>
        if (!localStorage.getItem('token')) {
            alert("No tienes una sesión activa. Por favor, inicia sesión.");
            window.location.href = '/auth/login';
        }

        const { createApp } = Vue;

        createApp({
            data() {
                return {
                    anuncios: [], // Últimos anuncios
                    aplicaciones: [], // Anuncios a los que aplicó
                    perfil: { name: '', carrera: '', curso: '' },
                    perfilCompleto: false, // Estado del perfil
                    mensaje: ''
                };
            },
            async created() {
                const token = localStorage.getItem('token');
                if (token) {
                    await this.fetchAnuncios();
                    await this.fetchPerfil();
                    await this.checkPerfilCompleto();
                } else {
                    console.error("Token no encontrado. Redirigiendo al inicio de sesión.");
                }
            },
            methods: {
                async fetchWithAuth(url, options = {}) {
                    const token = localStorage.getItem('token');
                    if (!token) {
                        console.error("Token no encontrado en localStorage");
                        alert("Token no encontrado, por favor inicie sesión nuevamente.");
                        window.location.href = '/auth/login';
                        return;
                    }
                    const headers = {
                        'Authorization': `Bearer ${token}`,
                        ...options.headers
                    };
                    return fetch(url, { ...options, headers });
                },

                async fetchAnuncios() {
                    try {
                        console.log("Intentando obtener anuncios...");
                        const response = await this.fetchWithAuth('/alumno/anuncios');
                        if (response.ok) {
                            this.anuncios = await response.json();
                            console.log("Anuncios obtenidos:", this.anuncios);
                        } else {
                            console.error("Error al obtener anuncios:", response.status, response.statusText);
                        }
                    } catch (error) {
                        console.error("Error al obtener anuncios:", error);
                    }
                },

                async fetchPerfil() {
                    try {
                        console.log("Intentando obtener perfil...");
                        const response = await this.fetchWithAuth('/alumno/perfil');
                        if (response.ok) {
                            this.perfil = await response.json();
                            console.log("Perfil obtenido:", this.perfil);
                        } else {
                            console.error("Error al obtener perfil:", response.status, response.statusText);
                        }
                    } catch (error) {
                        console.error("Error al obtener perfil:", error);
                    }
                },

                async checkPerfilCompleto() {
                    // Determinar si el perfil está completo según los datos
                    this.perfilCompleto = this.perfil.name && this.perfil.carrera && this.perfil.curso;
                },

                async aplicarAnuncio(anuncioId) {
                    try {
                        console.log("Intentando aplicar a anuncio:", anuncioId);
                        const response = await this.fetchWithAuth(`/alumno/aplicar/${anuncioId}`, {
                            method: 'POST'
                        });
                        if (response.ok) {
                            alert("Aplicación enviada con éxito");
                        } else {
                            alert("Error al aplicar");
                            console.error("Error al aplicar anuncio:", response.status, response.statusText);
                        }
                    } catch (error) {
                        console.error("Error al aplicar:", error);
                    }
                },

                logout() {
                    console.log("Cerrando sesión...");
                    localStorage.removeItem('token');
                    window.location.href = '/auth/login';
                },

                verAnuncio(id) {
                    window.location.href = `/anuncio/${id}`;
                }
            }
        }).mount('#app');
    </script>
</body>
</html>
