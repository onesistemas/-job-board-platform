<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel de Administrador</title>
    <!-- Enlace a Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <!-- Enlace a Font Awesome para iconos -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <!-- Estilos personalizados -->
    <style>
        body {
            background-color: #f5f8fb;
            font-family: Arial, sans-serif;
        }
        .navbar {
            background-color: #003366;
        }
        .navbar-brand, .navbar-nav .nav-link, .navbar-text {
            color: #ffffff !important;
        }
        .container-title {
            margin-top: 20px;
            text-align: center;
            color: #003366;
        }
        .card {
            margin-bottom: 20px;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>

    <!-- Barra de Navegación -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Logo</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-home"></i> Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-cogs"></i> Configuración de la Institución</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-users"></i> Gestión de Usuarios</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-building"></i> Gestión de Empresas</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-chart-line"></i> Estadísticas</a>
                    </li>
                </ul>
                <span class="navbar-text">
                    <img src="ruta_del_avatar" alt="Avatar" class="rounded-circle" width="30" height="30"> Admin
                </span>
                <button class="btn btn-outline-light ms-3" @click="logout">Cerrar sesión</button>
            </div>
        </div>
    </nav>

    <!-- Contenedor Principal -->
    <div class="container mt-4" id="app">
        <!-- Título -->
        <div class="container-title">
            <h2>Panel del Administrador - Gestión General</h2>
        </div>

        <!-- Sección de Configuración de la Institución -->
        <h3>Configuración de la Institución</h3>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Información de la Institución</h5>
                <form @submit.prevent="actualizarInstitucion">
                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre de la Institución</label>
                        <input type="text" class="form-control" id="nombre" v-model="institucion.nombre">
                    </div>
                    <div class="mb-3">
                        <label for="ubicacion" class="form-label">Ubicación</label>
                        <input type="text" class="form-control" id="ubicacion" v-model="institucion.ubicacion">
                    </div>
                    <div class="mb-3">
                        <label for="contacto" class="form-label">Contacto</label>
                        <input type="text" class="form-control" id="contacto" v-model="institucion.contacto">
                    </div>
                    <button type="submit" class="btn btn-primary">Actualizar Institución</button>
                </form>
            </div>
        </div>

        <!-- Sección de Gestión de Usuarios -->
        <h3 class="mt-4">Gestión de Usuarios</h3>
        <ul class="list-group">
            <li class="list-group-item" v-for="usuario in usuarios" :key="usuario.id">
                {{ usuario.nombre }} - {{ usuario.rol }}
                <button class="btn btn-danger btn-sm float-end" @click="eliminarUsuario(usuario.id)">Eliminar</button>
            </li>
        </ul>

        <!-- Sección de Gestión de Empresas -->
        <h3 class="mt-4">Gestión de Empresas</h3>
        <ul class="list-group">
            <li class="list-group-item" v-for="empresa in empresas" :key="empresa.id">
                {{ empresa.nombre }} - {{ empresa.ubicacion }}
                <button class="btn btn-danger btn-sm float-end" @click="eliminarEmpresa(empresa.id)">Eliminar</button>
            </li>
        </ul>
    </div>

    <!-- Scripts de Bootstrap y Vue.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js"></script>

    <script>
        if (!localStorage.getItem('token')) {
            alert("No tienes una sesión activa. Por favor, inicia sesión.");
            window.location.href = '/auth/login';
        }

        const { createApp } = Vue;

        createApp({
            data() {
                return {
                    institucion: { nombre: '', ubicacion: '', contacto: '' },
                    usuarios: [], // Listado de usuarios
                    empresas: [] // Listado de empresas
                };
            },
            async created() {
                await this.fetchInstitucion();
                await this.fetchUsuarios();
                await this.fetchEmpresas();
            },
            methods: {
                async fetchWithAuth(url, options = {}) {
                    const token = localStorage.getItem('token');
                    if (!token) {
                        alert("No tienes una sesión activa. Por favor, inicia sesión.");
                        window.location.href = '/auth/login';
                        return;
                    }
                    const headers = { 'Authorization': `Bearer ${token}`, ...options.headers };
                    return fetch(url, { ...options, headers });
                },
                
                async fetchInstitucion() {
                    const response = await this.fetchWithAuth('/admin/institucion');
                    if (response.ok) this.institucion = await response.json();
                },

                async fetchUsuarios() {
                    const response = await this.fetchWithAuth('/admin/usuarios');
                    if (response.ok) this.usuarios = await response.json();
                },

                async fetchEmpresas() {
                    const response = await this.fetchWithAuth('/admin/empresas');
                    if (response.ok) this.empresas = await response.json();
                },

                async actualizarInstitucion() {
                    const response = await this.fetchWithAuth('/admin/institucion', {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(this.institucion)
                    });
                    if (response.ok) alert("Institución actualizada con éxito.");
                },

                async eliminarUsuario(id) {
                    if (confirm("¿Estás seguro de que deseas eliminar este usuario?")) {
                        const response = await this.fetchWithAuth(`/admin/usuarios/${id}`, { method: 'DELETE' });
                        if (response.ok) this.usuarios = this.usuarios.filter(usuario => usuario.id !== id);
                    }
                },

                async eliminarEmpresa(id) {
                    if (confirm("¿Estás seguro de que deseas eliminar esta empresa?")) {
                        const response = await this.fetchWithAuth(`/admin/empresas/${id}`, { method: 'DELETE' });
                        if (response.ok) this.empresas = this.empresas.filter(empresa => empresa.id !== id);
                    }
                },

                logout() {
                    localStorage.removeItem('token');
                    window.location.href = '/auth/login';
                }
            }
        }).mount('#app');
    </script>
</body>
</html>
