<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Anuncios</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
	    <style>
        body {
            background-color: #f5f8fb;
            font-family: Arial, sans-serif;
        }
        .navbar {
            background-color: #003366;
        }
        .navbar-brand, .navbar-nav .nav-link, .navbar-text {
            color: #ffffff !important;
        }
        .container-title {
            margin-top: 20px;
            text-align: center;
            color: #003366;
        }
        .card {
            margin-top: 30px;
            padding: 20px;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        .card i {
            font-size: 3rem;
            color: #003366;
            margin-bottom: 10px;
        }
        .card h5 {
            color: #003366;
        }
        .alert-primary {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
    </style>
</head>
<body>
<!-- Barra de Navegación -->
<nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Logo</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link" href="dashboard"><i class="fas fa-home"></i> Inicio</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="configuracionInstitucion"><i class="fas fa-cogs"></i> Configuración de la Institución</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="estadisticas"><i class="fas fa-chart-line"></i> Estadísticas</a>
                </li>
            </ul>
            <span class="navbar-text">
                <!-- Icono de persona -->
                <i class="fas fa-user-circle" style="font-size: 1.5em;"></i> Admin
            </span>
            <button class="btn btn-outline-light ms-3" @click="logout">Cerrar sesión</button>
        </div>
    </div>
</nav>

    <div class="container mt-4">
        <h2>Gestión de Anuncios</h2>
        <button class="btn btn-primary mb-3" @click="mostrarFormulario = true">Agregar Anuncio</button>

        <div v-if="anuncios.length === 0" class="alert alert-info">
            No hay anuncios disponibles. <button class="btn btn-link p-0" @click="mostrarFormulario = true">Agregar un nuevo anuncio</button>.
        </div>

        <table v-if="anuncios.length > 0" class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Título</th>
                    <th>Descripción</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="anuncio in anuncios" :key="anuncio.id">
                    <td>{{ anuncio.id }}</td>
                    <td>{{ anuncio.titulo }}</td>
                    <td>{{ anuncio.descripcion }}</td>
                    <td>
                        <button class="btn btn-warning btn-sm" @click="editarAnuncio(anuncio)">Editar</button>
                        <button class="btn btn-danger btn-sm" @click="eliminarAnuncio(anuncio.id)">Eliminar</button>
                    </td>
                </tr>
            </tbody>
        </table>

        <!-- Formulario para agregar/editar anuncio -->
        <div v-if="mostrarFormulario" class="modal">
            <div class="modal-content p-4">
                <h4>{{ editando ? 'Editar Anuncio' : 'Nuevo Anuncio' }}</h4>
                <form @submit.prevent="guardarAnuncio">
                    <div class="mb-3">
                        <label for="titulo" class="form-label">Título</label>
                        <input type="text" id="titulo" class="form-control" v-model="anuncio.titulo" required>
                    </div>
                    <div class="mb-3">
                        <label for="descripcion" class="form-label">Descripción</label>
                        <textarea id="descripcion" class="form-control" v-model="anuncio.descripcion" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-success">{{ editando ? 'Actualizar' : 'Guardar' }}</button>
                    <button type="button" class="btn btn-secondary" @click="cerrarFormulario">Cancelar</button>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js"></script>
    <script>
        const { createApp } = Vue;

        createApp({
            data() {
                return {
                    anuncios: [],
                    anuncio: { id: '', titulo: '', descripcion: '' },
                    mostrarFormulario: false,
                    editando: false
                };
            },
            async created() {
                await this.fetchAnuncios();
            },
            methods: {
                async fetchAnuncios() {
                    const response = await fetch('/admin/anuncios');
                    if (response.ok) {
                        this.anuncios = await response.json();
                    } else {
                        console.error("Error al obtener anuncios:", response.statusText);
                    }
                },
                guardarAnuncio() {
                    if (this.editando) {
                        this.actualizarAnuncio();
                    } else {
                        this.agregarAnuncio();
                    }
                },
                async agregarAnuncio() {
                    const response = await fetch('/admin/anuncios', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(this.anuncio)
                    });
                    if (response.ok) {
                        await this.fetchAnuncios();
                        this.cerrarFormulario();
                    }
                },
                editarAnuncio(anuncio) {
                    this.anuncio = { ...anuncio };
                    this.editando = true;
                    this.mostrarFormulario = true;
                },
                async actualizarAnuncio() {
                    const response = await fetch(`/admin/anuncios/${this.anuncio.id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(this.anuncio)
                    });
                    if (response.ok) {
                        await this.fetchAnuncios();
                        this.cerrarFormulario();
                    }
                },
                async eliminarAnuncio(id) {
                    if (confirm("¿Estás seguro de que deseas eliminar este anuncio?")) {
                        await fetch(`/admin/anuncios/${id}`, { method: 'DELETE' });
                        await this.fetchAnuncios();
                    }
                },
                cerrarFormulario() {
                    this.anuncio = { id: '', titulo: '', descripcion: '' };
                    this.editando = false;
                    this.mostrarFormulario = false;
                }
            }
        }).mount('body');
    </script>
</body>
</html>
